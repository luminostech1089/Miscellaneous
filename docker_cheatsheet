===========
Pull Image:
===========
docker pull <image_name>:<tag>

tag is optional. By Default 'latest' tag is pulled

=================================
Search Image in docker repository
=================================
docker search <imae_name>

==============================
List downloaded docker Images
==============================
docker images

===================================
Disk space occupied by Docker image
===================================
docker system df

=======================
Delete docker images
=======================
docker rmi <image_name>

===============
Start container
===============
docker run -dit <image_name>  --name=<container name>

d = detach (Run container in backgroud)
i=interactive
t=assign pseudo tty
--name= Human readable quick name (optional)

Note: If -d option is not specified, container is stopped when user types 'exit' on docker terminal.

===============
List containers
===============
docker ps -a

Note: By default 'ps' list only running containers. -a lists stoped containers as well

=================
Delete Container
=================
docker rm <container_name>

=================================
Set docker to restart upon reboot
==================================
The "--restart" option sets the restart policy. 
restart="always", ensures the container will always restartupon the Docker daemon startup (system boot/reboot).

docker run -d --name xyz --restart=always <image_name>

======================
View logs from docker
======================
docker logs <container_name>
docker logs -f <container_name>

-f: Read continuos logs 
Note: Use -t to get timestamp associated with log lines

============================
View logs from docker daemon
============================
journelctl --no-pager -u docker.service -n <no of lines to show>


===========================
Connecting to the container 
running in background
===========================
docker run -dit httpd  <--- launch container in background
docker exec -it <container_name> bash  <This cmd launch docker with docker terminal to interact with>

To execute command in docker from host:
docker exec -d httpd touch /root/hello


==========================
Cleanup
==========================
1. Delete all images to free up host space:
   sudo docker image prune -a   # Note: Container must be stopped and removed first
2. Remove all unused containers, networks, images and optionally volumes:
   sudo docker system prune  (Note: -a to remove all and not just dangling images and --volume to remove unused volumes)
   
=============================
What is docker dangling image
=============================
Docker dangling image is tthe one which does not have any name and tag.
Its very well explained here - https://www.howtogeek.com/devops/what-are-dangling-docker-images/#:~:text=Dangling%20images%20are%20untagged%20Docker,but%20still%20consume%20disk%20space.
